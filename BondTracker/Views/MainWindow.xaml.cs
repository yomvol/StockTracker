using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using BondTracker.ViewModels;

namespace BondTracker.Views
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        MainViewModel main_view_model;
        public MainWindow()
        {
            InitializeComponent();
            main_view_model = new MainViewModel();
            DataContext = main_view_model.manager;
            Binding binding = new Binding("DebuggingMessage");
            binding.Source = main_view_model;
            binding.Mode = BindingMode.OneWay;
            MessageLine.SetBinding(TextBlock.TextProperty, binding);
            InfoPanel.ItemsSource = main_view_model.LoadDataOnStocksCollection();
        }

        private void InfoPanel_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var col in grid.Columns)
            {
                switch (col.Header.ToString())
                {
                    case "ID":
                        col.DisplayIndex = 0;
                        break;
                    case "Name":
                        col.DisplayIndex = 1;
                        break;
                    case "Price":
                        col.DisplayIndex = 2;
                        break;
                    case "Change":
                        col.DisplayIndex = 3;
                        break;
                    case "IsDivident":
                        col.DisplayIndex = 4;
                        break;
                    case "NumberOfSharesInLot":
                        col.DisplayIndex = 5;
                        break;
                    case "DividentsPerShare":
                        col.DisplayIndex = 6;
                        break;
                    case "NextDividentPayment":
                        col.DisplayIndex = 7;
                        break;
                    default:
                        break;
                }
            }
        }
    }
}
